#!/usr/bin/env bash

# Wywołanie skryptu $0 z parametrem -i tworzy symlinki w katalogu $BIN

DATA=$(date +%F-%T)
BIN=~/bin

# vim_notes {{{
function vim_notes() {
    cd ~/notes
    SEARCH=$(sk --ansi -i -c 'rg --color=always --line-number "{}"' \
        --bind "ctrl-p:toggle-preview" --preview "preview.sh {}" \
        --preview-window=down:50%:hidden)
    readarray -td: array <<<"$SEARCH"
    FILE=${array[0]}
    LINE=${array[1]}
    ARRAY_NOE=${#array[@]}
    if [ $ARRAY_NOE -gt 1 ]; then
        vim $FILE +$LINE
    fi
}
# vim_notes }}}
# create_symlinks {{{
function create_symlinks() {
    LINKI="$(grep "^function" "$0" | cut -f 2 -d ' ' | cut -f 1 -d\()"
    for I in $LINKI
    do
        if [[ -f $BIN/$I  && ! -L $BIN/$I ]]
        then
            echo "UWAGA! \"$BIN/$I\" istnieje i NIE jest linkiem."
        elif [ ! -L $BIN/$I ]
        then
            cd $BIN
            ln -s $(basename $0) $I
            # ln -s $BIN/$(basename $0) $BIN/$I
            echo "Utworzyłem link $BIN/$I"
        elif [ ! -e $BIN/$I ]   # uszkodzony symlink
        then
            ln -sf $BIN/$(basename $0) $BIN/$I
            echo "Utworzyłem link $BIN/$I"
        fi
    done
}
# create_symlinks }}}
# main {{{
if [ ! -z "$1" ]; then
    case "$1" in
        -i)
            create_symlinks
            ;;
        -e)
            $EDITOR "$(readlink -f ~/bin/funkcje)"
            ;;
        -h)
            echo
            echo " -- -i - tworzy symlinki w katalogu ~/bin/"
            echo " -- -e - edycja ~/bin/funkcje"
            echo " -- -h - pomoc"
            echo
            ;;
        *)
            ;;
    esac
fi

case $(basename $0) in
    vf)
        vf
        ;;
    vim_notes)
        vim_notes
        ;;
    vs)
        vs
        ;;
esac
# main }}}
